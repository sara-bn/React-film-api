{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\17789\\\\Downloads\\\\React\\\\react-final\\\\react-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\17789\\\\Downloads\\\\React\\\\react-final\\\\react-final\\\\src\\\\Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        breeds = _useState2[0],\n        setBreeds = _useState2[1]; //object\n\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        breed = _useState4[0],\n        setBreed = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        catResults = _useState6[0],\n        setCatResults = _useState6[1];\n\n  useEffect(() => {\n    fetchCategories();\n  }, [breeds]);\n\n  async function fetchCategories() {\n    const url = \"https://api.thecatapi.com/v1/breeds\";\n    const response = await axios.get(url);\n    const newBreeds = response.data;\n    const selectorOptions = newBreeds.map((breed, index) => breed = {\n      label: breed.name,\n      id: breed.id\n    });\n    setBreeds(selectorOptions);\n  }\n\n  async function handleSetBreeds(selected) {\n    setBreed(selected);\n    const string = selected.id;\n    const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${string}`; //local variable can have the same name as above\n\n    const response = await axios.get(url);\n    const newCatResults = response.data;\n    setCatResults(newCatResults);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Cat World\"), React.createElement(Select, {\n    class: \"select\",\n    options: breeds,\n    onChange: handleSetBreeds,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Search Results\"), catResults.map(catResult => //key and id\n  React.createElement(Link, {\n    key: catResult.id,\n    to: \"/cats/\" + catResult.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: catResult.url,\n    key: catResult.id,\n    alt: \"cats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, catResult.width), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, catResult.breeds[0].country_code)))));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/17789/Downloads/React/react-final/react-final/src/Home.js"],"names":["React","useState","useEffect","Select","axios","Link","Home","breeds","setBreeds","breed","setBreed","catResults","setCatResults","fetchCategories","url","response","get","newBreeds","data","selectorOptions","map","index","label","name","id","handleSetBreeds","selected","string","newCatResults","catResult","width","country_code"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,IAAT,GAAgB;AAAA,oBACcL,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,QACPM,MADO;AAAA,QACCC,SADD,kBAEd;;;AAFc,qBAGYP,QAAQ,CAAC,EAAD,CAHpB;AAAA;AAAA,QAGPQ,KAHO;AAAA,QAGAC,QAHA;;AAAA,qBAIsBT,QAAQ,CAAC,EAAD,CAJ9B;AAAA;AAAA,QAIPU,UAJO;AAAA,QAIKC,aAJL;;AAMdV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,eAAe;AAChB,GAFQ,EAEN,CAACN,MAAD,CAFM,CAAT;;AAIA,iBAAeM,eAAf,GAAiC;AAC/B,UAAMC,GAAG,GAAG,qCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUF,GAAV,CAAvB;AACA,UAAMG,SAAS,GAAGF,QAAQ,CAACG,IAA3B;AACA,UAAMC,eAAe,GAAGF,SAAS,CAACG,GAAV,CACtB,CAACX,KAAD,EAAQY,KAAR,KACGZ,KAAK,GAAG;AACPa,MAAAA,KAAK,EAAEb,KAAK,CAACc,IADN;AAEPC,MAAAA,EAAE,EAAEf,KAAK,CAACe;AAFH,KAFW,CAAxB;AAOAhB,IAAAA,SAAS,CAACW,eAAD,CAAT;AACD;;AAED,iBAAeM,eAAf,CAA+BC,QAA/B,EAAyC;AACvChB,IAAAA,QAAQ,CAACgB,QAAD,CAAR;AACA,UAAMC,MAAM,GAAGD,QAAQ,CAACF,EAAxB;AACA,UAAMV,GAAG,GAAI,wDAAuDa,MAAO,EAA3E,CAHuC,CAIvC;;AACA,UAAMZ,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUF,GAAV,CAAvB;AACA,UAAMc,aAAa,GAAGb,QAAQ,CAACG,IAA/B;AACAN,IAAAA,aAAa,CAACgB,aAAD,CAAb;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAErB,MAAhC;AAAwC,IAAA,QAAQ,EAAEkB,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGd,UAAU,CAACS,GAAX,CAAeS,SAAS,IACvB;AACA,sBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,SAAS,CAACL,EAArB;AAAyB,IAAA,EAAE,EAAE,WAAWK,SAAS,CAACL,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEK,SAAS,CAACf,GAApB;AAAyB,IAAA,GAAG,EAAEe,SAAS,CAACL,EAAxC;AAA4C,IAAA,GAAG,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,SAAS,CAACC,KAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,SAAS,CAACtB,MAAV,CAAiB,CAAjB,EAAoBwB,YAAzB,CAHF,CAFD,CAFH,CAJF,CADF;AAkBD;;AAED,eAAezB,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const [breeds, setBreeds] = useState([]);\r\n  //object\r\n  const [breed, setBreed] = useState({});\r\n  const [catResults, setCatResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, [breeds]);\r\n\r\n  async function fetchCategories() {\r\n    const url = \"https://api.thecatapi.com/v1/breeds\";\r\n    const response = await axios.get(url);\r\n    const newBreeds = response.data;\r\n    const selectorOptions = newBreeds.map(\r\n      (breed, index) =>\r\n        (breed = {\r\n          label: breed.name,\r\n          id: breed.id\r\n        })\r\n    );\r\n    setBreeds(selectorOptions);\r\n  }\r\n\r\n  async function handleSetBreeds(selected) {\r\n    setBreed(selected);\r\n    const string = selected.id;\r\n    const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${string}`;\r\n    //local variable can have the same name as above\r\n    const response = await axios.get(url);\r\n    const newCatResults = response.data;\r\n    setCatResults(newCatResults);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cat World</h1>\r\n      <Select class=\"select\" options={breeds} onChange={handleSetBreeds} />\r\n\r\n      <div>\r\n        <h2>Search Results</h2>\r\n        {catResults.map(catResult => (\r\n          //key and id\r\n          <Link key={catResult.id} to={\"/cats/\" + catResult.id}>\r\n            <img src={catResult.url} key={catResult.id} alt=\"cats\" />\r\n            <h1>{catResult.width}</h1>\r\n            <h1>{catResult.breeds[0].country_code}</h1>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}