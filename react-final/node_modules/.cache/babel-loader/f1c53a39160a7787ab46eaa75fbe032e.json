{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\reyar\\\\Desktop\\\\SSD Projects\\\\React-film-api\\\\react-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\reyar\\\\Desktop\\\\SSD Projects\\\\React-film-api\\\\react-final\\\\src\\\\Discover.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./styles.css\";\nimport Navigation from \"./Navigation\";\nimport Movies from \"./Movies\";\n\nclass Discover extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      total_pages: 1,\n      page: 1,\n      url: `https://api.themoviedb.org/3/genre/movie/list?api_key=651925d45022d1ae658063b443c99784&language=en-US`,\n      moviesUrl: `https://api.themoviedb.org/3/discover/movie?api_key=651925d45022d1ae658063b443c99784&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`,\n      genre: \"Comedy\",\n      genres: [],\n      year: {\n        label: \"year\",\n        min: 1920,\n        max: 2020,\n        step: 1,\n        value: {\n          min: 2000,\n          max: 2020\n        }\n      }\n    };\n\n    this.onGenreChange = event => {\n      this.setState({\n        genre: event.target.value\n      });\n    };\n\n    this.setGenres = genres => {\n      this.setState({\n        genres\n      });\n    };\n\n    this.onChange = data => {\n      this.setState({\n        [data.type]: _objectSpread({}, this.state[data.type], {\n          value: data.value\n        })\n      });\n    };\n\n    this.generateUrl = params => {\n      const genres = params.genres,\n            year = params.year,\n            rating = params.rating,\n            runtime = params.runtime,\n            page = params.page;\n      const selectedGenre = genres.find(genre => genre.name === params.genre);\n      const genreId = selectedGenre.id;\n      const moviesUrl = `https://api.themoviedb.org/3/discover/movie?` + `api_key=651925d45022d1ae658063b443c99784&` + `language=en-US&sort_by=popularity.desc&` + `with_genres=${genreId}&` + `primary_release_date.gte=${year.value.min}-01-01&` + `primary_release_date.lte=${year.value.max}-12-31&` + `vote_average.gte=${rating.value.min}&` + `vote_average.lte=${rating.value.max}&` + `with_runtime.gte=${runtime.value.min}&` + `with_runtime.lte=${runtime.value.max}&` + `page=${page}`;\n      this.setState({\n        moviesUrl\n      });\n    };\n\n    this.onSearchButtonClick = () => {\n      this.setState({\n        page: 1\n      });\n      this.generateUrl(this.state);\n    };\n\n    this.saveStateToLocalStorage = params => {\n      localStorage.setItem(\"sweetpumpkins.params\", JSON.stringify(this.state));\n    };\n\n    this.getStateFromLocalStorage = () => {\n      return JSON.parse(localStorage.getItem(\"sweetpumpkins.params\"));\n    };\n\n    this.fetchMovies = url => {\n      fetch(url).then(response => response.json()).then(data => this.storeMovies(data)).catch(error => console.log(error));\n    };\n\n    this.storeMovies = data => {\n      const movies = data.results.map(result => {\n        const vote_count = result.vote_count,\n              id = result.id,\n              genre_ids = result.genre_ids,\n              poster_path = result.poster_path,\n              title = result.title,\n              vote_average = result.vote_average,\n              release_date = result.release_date;\n        return {\n          vote_count,\n          id,\n          genre_ids,\n          poster_path,\n          title,\n          vote_average,\n          release_date\n        };\n      });\n      this.setState({\n        movies,\n        total_pages: data.total_pages\n      });\n    };\n\n    this.onPageIncrease = () => {\n      const _this$state = this.state,\n            page = _this$state.page,\n            total_pages = _this$state.total_pages;\n      const nextPage = page + 1;\n\n      if (nextPage <= total_pages) {\n        this.setState({\n          page: nextPage\n        });\n      }\n    };\n\n    this.onPageDecrease = () => {\n      const nextPage = this.state.page - 1;\n\n      if (nextPage > 0) {\n        this.setState({\n          page: nextPage\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const savedState = this.getStateFromLocalStorage();\n\n    if (!savedState || savedState && !savedState.movies.length) {\n      this.fetchMovies(this.state.moviesUrl);\n    } else {\n      this.setState(_objectSpread({}, savedState));\n      this.generateUrl(savedState);\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.saveStateToLocalStorage();\n\n    if (this.state.moviesUrl !== nextState.moviesUrl) {\n      this.fetchMovies(nextState.moviesUrl);\n    }\n\n    if (this.state.page !== nextState.page) {\n      this.generateUrl(nextState);\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"Discover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Navigation, Object.assign({\n      onChange: this.onChange,\n      onGenreChange: this.onGenreChange,\n      setGenres: this.setGenres,\n      onSearchButtonClick: this.onSearchButtonClick\n    }, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(Movies, {\n      movies: this.state.movies,\n      page: this.state.page,\n      onPageIncrease: this.onPageIncrease,\n      onPageDecrease: this.onPageDecrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Discover;","map":{"version":3,"sources":["C:/Users/reyar/Desktop/SSD Projects/React-film-api/react-final/src/Discover.js"],"names":["React","useState","useEffect","Link","Axios","Navigation","Movies","Discover","Component","state","movies","total_pages","page","url","moviesUrl","genre","genres","year","label","min","max","step","value","onGenreChange","event","setState","target","setGenres","onChange","data","type","generateUrl","params","rating","runtime","selectedGenre","find","name","genreId","id","onSearchButtonClick","saveStateToLocalStorage","localStorage","setItem","JSON","stringify","getStateFromLocalStorage","parse","getItem","fetchMovies","fetch","then","response","json","storeMovies","catch","error","console","log","results","map","result","vote_count","genre_ids","poster_path","title","vote_average","release_date","onPageIncrease","nextPage","onPageDecrease","componentDidMount","savedState","length","componentWillUpdate","nextProps","nextState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"./styles.css\";\r\n\r\nimport Navigation from \"./Navigation\";\r\nimport Movies from \"./Movies\";\r\n\r\nclass Discover extends React.Component {\r\n  state = {\r\n    movies: [],\r\n    total_pages: 1,\r\n    page: 1,\r\n    url: `https://api.themoviedb.org/3/genre/movie/list?api_key=651925d45022d1ae658063b443c99784&language=en-US`,\r\n    moviesUrl: `https://api.themoviedb.org/3/discover/movie?api_key=651925d45022d1ae658063b443c99784&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`,\r\n    genre: \"Comedy\",\r\n    genres: [],\r\n    year: {\r\n      label: \"year\",\r\n      min: 1920,\r\n      max: 2020,\r\n      step: 1,\r\n      value: { min: 2000, max: 2020 }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedState = this.getStateFromLocalStorage();\r\n    if (!savedState || (savedState && !savedState.movies.length)) {\r\n      this.fetchMovies(this.state.moviesUrl);\r\n    } else {\r\n      this.setState({ ...savedState });\r\n      this.generateUrl(savedState);\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    this.saveStateToLocalStorage();\r\n    if (this.state.moviesUrl !== nextState.moviesUrl) {\r\n      this.fetchMovies(nextState.moviesUrl);\r\n    }\r\n    if (this.state.page !== nextState.page) {\r\n      this.generateUrl(nextState);\r\n    }\r\n  }\r\n\r\n  onGenreChange = event => {\r\n    this.setState({ genre: event.target.value });\r\n  };\r\n\r\n  setGenres = genres => {\r\n    this.setState({ genres });\r\n  };\r\n\r\n  onChange = data => {\r\n    this.setState({\r\n      [data.type]: {\r\n        ...this.state[data.type],\r\n        value: data.value\r\n      }\r\n    });\r\n  };\r\n\r\n  generateUrl = params => {\r\n    const { genres, year, rating, runtime, page } = params;\r\n    const selectedGenre = genres.find(genre => genre.name === params.genre);\r\n    const genreId = selectedGenre.id;\r\n\r\n    const moviesUrl =\r\n      `https://api.themoviedb.org/3/discover/movie?` +\r\n      `api_key=651925d45022d1ae658063b443c99784&` +\r\n      `language=en-US&sort_by=popularity.desc&` +\r\n      `with_genres=${genreId}&` +\r\n      `primary_release_date.gte=${year.value.min}-01-01&` +\r\n      `primary_release_date.lte=${year.value.max}-12-31&` +\r\n      `vote_average.gte=${rating.value.min}&` +\r\n      `vote_average.lte=${rating.value.max}&` +\r\n      `with_runtime.gte=${runtime.value.min}&` +\r\n      `with_runtime.lte=${runtime.value.max}&` +\r\n      `page=${page}`;\r\n\r\n    this.setState({ moviesUrl });\r\n  };\r\n\r\n  onSearchButtonClick = () => {\r\n    this.setState({ page: 1 });\r\n    this.generateUrl(this.state);\r\n  };\r\n\r\n  saveStateToLocalStorage = params => {\r\n    localStorage.setItem(\"sweetpumpkins.params\", JSON.stringify(this.state));\r\n  };\r\n\r\n  getStateFromLocalStorage = () => {\r\n    return JSON.parse(localStorage.getItem(\"sweetpumpkins.params\"));\r\n  };\r\n\r\n  fetchMovies = url => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => this.storeMovies(data))\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  storeMovies = data => {\r\n    const movies = data.results.map(result => {\r\n      const {\r\n        vote_count,\r\n        id,\r\n        genre_ids,\r\n        poster_path,\r\n        title,\r\n        vote_average,\r\n        release_date\r\n      } = result;\r\n      return {\r\n        vote_count,\r\n        id,\r\n        genre_ids,\r\n        poster_path,\r\n        title,\r\n        vote_average,\r\n        release_date\r\n      };\r\n    });\r\n    this.setState({ movies, total_pages: data.total_pages });\r\n  };\r\n\r\n  onPageIncrease = () => {\r\n    const { page, total_pages } = this.state;\r\n    const nextPage = page + 1;\r\n    if (nextPage <= total_pages) {\r\n      this.setState({ page: nextPage });\r\n    }\r\n  };\r\n\r\n  onPageDecrease = () => {\r\n    const nextPage = this.state.page - 1;\r\n    if (nextPage > 0) {\r\n      this.setState({ page: nextPage });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"Discover\">\r\n        <Navigation\r\n          onChange={this.onChange}\r\n          onGenreChange={this.onGenreChange}\r\n          setGenres={this.setGenres}\r\n          onSearchButtonClick={this.onSearchButtonClick}\r\n          {...this.state}\r\n        />\r\n         <Movies\r\n          movies={this.state.movies}\r\n          page={this.state.page}\r\n          onPageIncrease={this.onPageIncrease}\r\n          onPageDecrease={this.onPageDecrease}\r\n        /> \r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Discover;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}