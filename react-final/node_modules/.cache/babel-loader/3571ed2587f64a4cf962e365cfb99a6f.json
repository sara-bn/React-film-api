{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\reyar\\\\Desktop\\\\React-film-api\\\\react-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\reyar\\\\Desktop\\\\React-film-api\\\\react-final\\\\src\\\\Search_result.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./styles.css\";\nimport $ from \"jquery\";\n\nfunction SearchResult() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        movies = _useState2[0],\n        setMovies = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  async function SearchMovie(event) {\n    const choice = document.getElementById(\"myChoice\").value; // const url = `https://api.themoviedb.org/3/movie/${choice}?api_key=153693fafc14ce487b5a217264c74cb1&language=en-US`;\n    //console.log(choice);\n\n    const newName = event.target.value;\n    setName(newName);\n    performSearch(choice);\n    return choice;\n  }\n\n  function performSearch(choice) {\n    //console.log(\"Perform search\");\n    const urlString = `https://api.themoviedb.org/3/search/movie?query=${choice}&api_key=153693fafc14ce487b5a217264c74cb1&language=en-US`;\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        //console.log(\"Fetched successfully\");\n        //const results contain all the movies that we are searching for\n        const results = searchResults.results;\n        setMovies(searchResults.results);\n        console.log(movies[0]);\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  const url = `https://image.tmdb.org/t/p/w500/`; // const c = `{SearchMovie()}`;\n\n  return React.createElement(\"div\", {\n    className: \"search-container container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"row\",\n    id: \"myChoice\",\n    type: \"text\",\n    placeholder: \"Search Movie by Title\",\n    \"aria-label\": \"Search\",\n    name: \"search\",\n    value: name,\n    onChange: SearchMovie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" Search result for \", name, \" \"), React.createElement(\"div\", {\n    className: \"d-flex justify-content-center row \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, movies.slice(0, 12).map(movie => React.createElement(\"div\", {\n    key: movie.id,\n    className: \"one_movie col-xl-3 col-lg-4 col-sm-6 col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"poster \",\n    src: url + movie.poster_path,\n    alt: \"o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, movie.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, movie.release_date), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" \", movie.vote_average), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \" \", movie.overview.substring(0, 120) + \"...\"), React.createElement(\"a\", {\n    href: `/movie/${movie.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"More Info\")))));\n}\n\nexport default SearchResult;","map":{"version":3,"sources":["C:/Users/reyar/Desktop/React-film-api/react-final/src/Search_result.js"],"names":["React","useState","useEffect","Link","Axios","$","SearchResult","movies","setMovies","name","setName","SearchMovie","event","choice","document","getElementById","value","newName","target","performSearch","urlString","ajax","url","success","searchResults","results","console","log","error","xhr","status","err","slice","map","movie","id","poster_path","title","release_date","vote_average","overview","substring"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport $ from \"jquery\";\r\n\r\nfunction SearchResult() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [name, setName] = useState(\"\");  \r\n\r\n  async function SearchMovie(event) {\r\n    const choice = document.getElementById(\"myChoice\").value;\r\n    // const url = `https://api.themoviedb.org/3/movie/${choice}?api_key=153693fafc14ce487b5a217264c74cb1&language=en-US`;\r\n    //console.log(choice);\r\n    const newName = event.target.value;\r\n    setName(newName);\r\n    performSearch(choice);\r\n    return choice;\r\n  }\r\n\r\n  function performSearch(choice){\r\n    //console.log(\"Perform search\");\r\n    const urlString = `https://api.themoviedb.org/3/search/movie?query=${choice}&api_key=153693fafc14ce487b5a217264c74cb1&language=en-US`;\r\n    $.ajax({\r\n        url: urlString,\r\n        success: (searchResults) => {\r\n          //console.log(\"Fetched successfully\");\r\n          //const results contain all the movies that we are searching for\r\n          const results = searchResults.results;\r\n          setMovies(searchResults.results);\r\n          console.log(movies[0]);\r\n\r\n        },\r\n        error: (xhr, status, err) =>{\r\n          console.error(\"Failed to fetch data\")\r\n        }\r\n\r\n    })\r\n  }\r\n\r\n  const url = `https://image.tmdb.org/t/p/w500/`;\r\n\r\n  // const c = `{SearchMovie()}`;\r\n\r\n  return (\r\n   <div className=\"search-container container\">\r\n     \r\n      <input className=\"row\"\r\n      id = \"myChoice\"\r\n      type=\"text\"\r\n      placeholder=\"Search Movie by Title\"\r\n      aria-label=\"Search\"\r\n      name=\"search\"\r\n      value={name}\r\n      onChange={SearchMovie}\r\n    />\r\n    <h2> Search result for {name} </h2> \r\n    <div className=\"d-flex justify-content-center row \" >\r\n        \r\n        {movies.slice(0, 12).map(movie => (   \r\n            <div key={movie.id} className=\"one_movie col-xl-3 col-lg-4 col-sm-6 col-12\">\r\n              <img className=\"poster \" src={url + movie.poster_path} alt=\"o\" />\r\n              <h2>{movie.title}</h2>\r\n              <p>{movie.release_date}</p>\r\n              <p> {movie.vote_average}</p>\r\n              <p> {movie.overview.substring(0, 120) + \"...\"}</p>\r\n              <a href={`/movie/${movie.id}`}>More Info</a> \r\n            </div>\r\n          ))}\r\n          </div>\r\n    </div>\r\n \r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}